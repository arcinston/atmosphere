# Copyright (c) 2025 VEXXHOST, Inc.
# SPDX-License-Identifier: Apache-2.0

_vault_spec:
  size: 3
  image: "{{ atmosphere_images['vault'] }}"
  nodeSelector:
    openstack-control-plane: enabled
  serviceAccount: vault
  serviceType: ClusterIP
  # NOTE(fitbeard): We do external ingress configuration
  ingress: null
  volumeClaimTemplates:
    - metadata:
        name: vault-raft
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
  volumes:
    - name: vault-raft
      persistentVolumeClaim:
        claimName: vault-raft
  volumeMounts:
    - name: vault-raft
      mountPath: /vault/data
  caNamespaces:
    - "*"
  unsealConfig:
    options:
      preFlightChecks: true
      storeRootToken: true
      secretShares: 5
      secretThreshold: 3
    kubernetes:
      secretNamespace: "{{ vault_namespace }}"
  config:
    storage:
      raft:
        path: /vault/data
    listener:
      tcp:
        address: 0.0.0.0:8200
        tls_cert_file: /vault/tls/server.crt
        tls_key_file: /vault/tls/server.key
    api_addr: "https://vault.{{ vault_namespace }}:8200"
    cluster_addr: "https://${.Env.POD_NAME}:8201"
    disable_mlock: true
    ui: true
    plugin_directory: /vault/plugins
    service_registration:
      kubernetes: {}
    telemetry:
      unauthenticated_metrics_access: true
  statsdDisabled: true
  serviceRegistrationEnabled: true
  externalConfig: {}
  secretInitsConfig:
    - name: VAULT_LOG_LEVEL
      value: "{{ vault_log_level }}"

# NOTE(fitbeard): Merging with overrides can lead to unexpected results.
# The best way to extend this configuration is to fully override it
# with your own configuration.
# TODO(fitbeard): Add OIDC auth with Keycloak
_vault_config:
  vault-config.yml: |
    purgeUnmanagedConfig:
      enabled: true
    auth:
      - type: approle
        path: approle
        roles:
          - name: ansible
            description: Ansible role for Vault
            secret_id_ttl: 2m
            secret_id_num_uses: 1
            token_ttl: 5m
            token_max_ttl: 10m
            token_type: default
            token_policies: ["write_kv_all"]
      - type: kubernetes
        path: {{ atmosphere_vault_kubernetes_auth_path }}
        description: Kubernetes authentication for local cluster
        config:
          kubernetes_host: https://kubernetes.default.svc
        roles:
          - name: ansible
            bound_service_account_names: ["ansible"]
            bound_service_account_namespaces: ["{{ vault_namespace | quote }}"]
            policies: ["ansible"]
            ttl: 1m
          - name: external-secrets-cluster-secret-store
            bound_service_account_names: ["external-secrets"]
            bound_service_account_namespaces: ["external-secrets"]
            policies: ["read_kv_all"]
            ttl: 1h
          - name: vault
            bound_service_account_names: ["*"]
            bound_service_account_namespaces: ["{{ vault_namespace | quote }}", "openstack"]
            policies: ["read_kv_all"]
            ttl: 1h
    policies:
      - name: ansible
        rules: |
          path "auth/approle/role/ansible/role-id" {
            capabilities = [ "read" ]
          }
          path "auth/approle/role/ansible/secret-id" {
             capabilities = [ "update" ]
          }
      - name: read_kv_all
        rules: |
          path "{{ atmosphere_vault_mount_point }}/data/*" {
            capabilities = ["read"]
          }
      - name: write_kv_all
        rules: |
          path "{{ atmosphere_vault_mount_point }}/data/*" {
            capabilities = ["create", "update", "patch", "read", "delete"]
          }
    secrets:
      - type: kv-v2
        path: {{ atmosphere_vault_mount_point }}
        description: Atmosphere static secrets

_vault_ingress_annotations:
  cert-manager.io/cluster-issuer: "{{ vault_ingress_cluster_issuer }}"
  nginx.ingress.kubernetes.io/backend-protocol: https
